{"version":3,"sources":["assets/archery-orig.png","components/Home.js","components/AboutMe.js","components/Projects.js","components/ContactMe.js","components/AppNavbar.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","Card","style","width","Body","Img","src","portrait","alt","Title","Text","Button","href","target","rel","Footer","React","Component","AboutMe","Projects","ContactMe","AppNavbar","Navbar","bg","variant","expand","fixed","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gHAAAA,EAAOC,QAAU,IAA0B,0C,+RCQtBC,E,uKAEjB,OACE,yBAAKC,UAAU,kBACb,kBAACC,EAAA,EAAD,CAAMD,UAAU,YAAYE,MAAO,CAAEC,MAAO,SAC1C,kBAACF,EAAA,EAAKG,KAAN,KACE,kBAACH,EAAA,EAAKI,IAAN,CACEL,UAAU,WACVM,IAAKC,IACLC,IAAI,6BAEN,yBAAKR,UAAU,iBACb,kBAACC,EAAA,EAAKQ,MAAN,qBACA,kBAACR,EAAA,EAAKS,KAAN,+CAC0C,IACxC,0BAAMV,UAAU,gBAAhB,iBAFF,gEAKA,kBAACW,EAAA,EAAD,CACEC,KAAK,6BACLC,OAAO,SACPC,IAAI,uBAHN,uBASJ,kBAACb,EAAA,EAAKc,OAAN,KACE,qC,GA5BsBC,IAAMC,WCLnBC,E,uKAIjB,OACE,6BACE,uD,GAN6BF,IAAMC,WCAtBE,E,uKAIjB,OACE,6BACE,6C,GAN8BH,IAAMC,WCDvBG,E,uKAGjB,OACE,6BACE,+C,GAL+BJ,IAAMC,W,gBCIxBI,G,6KAEjB,OACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,OACjD,kBAACJ,EAAA,EAAOK,MAAR,CAAc3B,UAAU,YAAYY,KAAK,KAAzC,WAGA,kBAACU,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,kBAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,oBAClB,kBAACC,EAAA,EAAD,CAAKhC,UAAU,qBACb,kBAACgC,EAAA,EAAIC,KAAL,CAAUrB,KAAK,YAAf,QACA,kBAACoB,EAAA,EAAIC,KAAL,CAAUrB,KAAK,YAAf,YACA,kBAACoB,EAAA,EAAIC,KAAL,CAAUrB,KAAK,aAAf,mB,GAZ2BI,IAAMC,YCExBiB,E,uKAEjB,OACE,0BAAMH,GAAG,UAAU/B,UAAU,OAC3B,4BAAQA,UAAU,cAChB,yBAAKA,UAAU,wBACb,kBAAC,EAAD,QAGJ,6BAASA,UAAU,gBACjB,kBAAC,EAAD,OAEF,iCACE,yBAAK+B,GAAG,WACN,kBAAC,EAAD,QAGJ,yBAAKA,GAAG,YACN,kBAAC,EAAD,OAEF,yBAAKA,GAAG,aACN,kBAAC,EAAD,Y,GArBuBf,IAAMC,WCInBkB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2e5cce36.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/archery-orig.b1e25313.png\";","import React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\nimport './componentStyles/home.css';\n\nimport portrait from '../assets/archery-orig.png';\n\nexport default class Home extends React.Component {\n  render() {\n    return (\n      <div className=\"card-container\">\n        <Card className=\"home-card\" style={{ width: '80vw' }}>\n          <Card.Body>\n            <Card.Img\n              className=\"portrait\"\n              src={portrait}\n              alt=\"portrait of Crue Jameson\"\n            />\n            <div className=\"card-contents\">\n              <Card.Title>Hello There!</Card.Title>\n              <Card.Text>\n                My Name Is Eric Crue Jameson. I'm a new{' '}\n                <span className=\"color-change\">Web Developer</span> from\n                Colorado. I'm learning fast and ready to keep growing.\n              </Card.Text>\n              <Button\n                href=\"https://github.com/Cruebee\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Check Out My Code\n              </Button>\n            </div>\n          </Card.Body>\n          <Card.Footer>\n            <div></div>\n          </Card.Footer>\n        </Card>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\n\nexport default class AboutMe extends React.Component {\n\n\n  render() {\n    return (\n      <div>\n        <h1>About Crue Jameson</h1>\n      </div>\n    );\n  }\n}","import React from 'react';\n\n\nexport default class Projects extends React.Component {\n\n\n  render() {\n    return (\n      <div>\n        <h1>Projects</h1>\n      </div>\n    );\n  }\n}","import React from 'react';\n\nexport default class ContactMe extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <h1>Contact Me</h1>\n      </div>\n    );\n  }\n}","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport { Nav } from 'react-bootstrap';\n\nimport './componentStyles/appNavbar.css';\n\nexport default class AppNavbar extends React.Component {\n  render() {\n    return (\n      <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\" fixed=\"top\">\n        <Navbar.Brand className=\"logo-temp\" href=\"#\">\n          Cruebee\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto logo-temp\">\n            <Nav.Link href=\"#pageTop\">Home</Nav.Link>\n            <Nav.Link href=\"#aboutMe\">About Me</Nav.Link>\n            <Nav.Link href=\"#projects\">Projects</Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Home from './components/Home';\nimport AboutMe from './components/AboutMe';\nimport Projects from './components/Projects';\nimport ContactMe from './components/ContactMe';\nimport AppNavbar from './components/AppNavbar';\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <main id=\"pageTop\" className=\"App\">\n        <header className=\"App-header\">\n          <nav className=\"navigation-container\">\n            <AppNavbar />\n          </nav>\n        </header>\n        <section className=\"home-section\">\n          <Home />\n        </section>\n        <section>\n          <div id=\"aboutMe\">\n            <AboutMe />\n          </div>\n        </section>\n        <div id=\"projects\">\n          <Projects />\n        </div>\n        <div id=\"contactMe\">\n          <ContactMe />\n        </div>\n      </main>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}